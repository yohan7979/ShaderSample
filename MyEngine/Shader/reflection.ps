Texture2D shaderTexture;
Texture2D reflectionTexture;
SamplerState SampleType;

struct PixelInputType
{
    float4 position : SV_POSITION;
    float2 tex : TEXCOORD0;
	float4 reflectionPosition : TEXCOORD1;
};

float4 ReflectionPixelShader(PixelInputType input) : SV_TARGET
{
    float4 textureColor;
	float2 reflectionTexcoord;
	float4 reflectionColor;
	float4 color;

    textureColor = shaderTexture.Sample(SampleType, input.tex);

	// 반사 위치를 텍스처 좌표로 변환
	reflectionTexcoord.x = input.reflectionPosition.x / input.reflectionPosition.w / 2.f + 0.5f;
	reflectionTexcoord.y = -input.reflectionPosition.y / input.reflectionPosition.w / 2.f + 0.5f;

	reflectionColor = reflectionTexture.Sample(SampleType, reflectionTexcoord);
	
	color = lerp(textureColor, reflectionColor, 0.15f);

    return color;
}